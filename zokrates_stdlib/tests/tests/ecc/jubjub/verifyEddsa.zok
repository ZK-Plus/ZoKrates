import "ecc/jubjub/verifyEddsa" as verifyEddsa;
import "ecc/babyjubjub/compress" as compress;
import "utils/pack/bool/pack256" as pack256;

// Code to create test case:
// https://github.com/Zokrates/pycrypto
def main() {

    // TODO: Jubjub currently work only for keys <=254 bit long
    // With the following keys should also work:
    // field[2] R = [32866767109220564315580607107081162920517672350707254238793964527466586251974, 31852087390335520207922973662676180854641055992940928475111512263314053365736];
    // field S = 43627586196239283173178511316555190744314536456808505435494185841008559853678;
    // field[2] A = [26479653887939839327536384197110148123933856719900448942651733342668343953867, 21757919891968253927635241665494706427345455214116275076018069565740804326091];

    field[2] R = [22490636668646525942229915433486323453438020635284373216128437835524621360673, 12624871741136060820677763385435731993497076701049783026530291333628743153148];
    field S = 4726755026051608078555693269742820684994756545022776898606146042065180474766;

    // Public Key
    field[2] A = [2448502067502868941604870117226902939301253140620644024854137332469457672501, 13461260963687082967268176292121237897132924185324950183385550823033303781608];

    u32[8] M0 = [0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000];
    u32[8] M1 = [0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000005];

    bool isVerified = verifyEddsa(R, S, A, M0, M1);
    assert(isVerified);
}